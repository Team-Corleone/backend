# Generated by Django 4.2.10 on 2025-03-14 19:21

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Genre",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="Tür Adı")),
                ("description", models.TextField(blank=True, verbose_name="Açıklama")),
            ],
            options={
                "verbose_name": "Tür",
                "verbose_name_plural": "Türler",
            },
        ),
        migrations.CreateModel(
            name="Movie",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=255, verbose_name="Başlık")),
                (
                    "original_title",
                    models.CharField(max_length=255, verbose_name="Orijinal Başlık"),
                ),
                ("overview", models.TextField(verbose_name="Özet")),
                (
                    "poster",
                    models.ImageField(
                        null=True, upload_to="movies/posters/", verbose_name="Afiş"
                    ),
                ),
                (
                    "backdrop",
                    models.ImageField(
                        null=True,
                        upload_to="movies/backdrops/",
                        verbose_name="Arka Plan",
                    ),
                ),
                ("release_date", models.DateField(verbose_name="Yayın Tarihi")),
                ("runtime", models.IntegerField(verbose_name="Süre (dakika)")),
                (
                    "budget",
                    models.BigIntegerField(blank=True, null=True, verbose_name="Bütçe"),
                ),
                (
                    "revenue",
                    models.BigIntegerField(
                        blank=True, null=True, verbose_name="Hasılat"
                    ),
                ),
                (
                    "imdb_id",
                    models.CharField(blank=True, max_length=50, verbose_name="IMDB ID"),
                ),
                (
                    "tmdb_id",
                    models.IntegerField(blank=True, null=True, verbose_name="TMDB ID"),
                ),
            ],
            options={
                "verbose_name": "Film",
                "verbose_name_plural": "Filmler",
            },
        ),
        migrations.CreateModel(
            name="Person",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255, verbose_name="Ad")),
                ("bio", models.TextField(blank=True, verbose_name="Biyografi")),
                (
                    "photo",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="people/",
                        verbose_name="Fotoğraf",
                    ),
                ),
                (
                    "birth_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="Doğum Tarihi"
                    ),
                ),
                (
                    "death_date",
                    models.DateField(blank=True, null=True, verbose_name="Ölüm Tarihi"),
                ),
                (
                    "imdb_id",
                    models.CharField(blank=True, max_length=50, verbose_name="IMDB ID"),
                ),
                (
                    "tmdb_id",
                    models.IntegerField(blank=True, null=True, verbose_name="TMDB ID"),
                ),
            ],
            options={
                "verbose_name": "Kişi",
                "verbose_name_plural": "Kişiler",
            },
        ),
        migrations.CreateModel(
            name="UserMovieList",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255, verbose_name="Liste Adı")),
                ("description", models.TextField(blank=True, verbose_name="Açıklama")),
                (
                    "is_public",
                    models.BooleanField(default=True, verbose_name="Herkese Açık"),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Film Listesi",
                "verbose_name_plural": "Film Listeleri",
            },
        ),
        migrations.CreateModel(
            name="UserMovieListItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("notes", models.TextField(blank=True, verbose_name="Notlar")),
                ("added_at", models.DateTimeField(auto_now_add=True)),
                ("order", models.IntegerField(verbose_name="Sıra")),
                (
                    "movie",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="movies.movie"
                    ),
                ),
                (
                    "movie_list",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="movies.usermovielist",
                    ),
                ),
            ],
            options={
                "verbose_name": "Liste Öğesi",
                "verbose_name_plural": "Liste Öğeleri",
                "ordering": ["order"],
            },
        ),
        migrations.AddField(
            model_name="usermovielist",
            name="movies",
            field=models.ManyToManyField(
                through="movies.UserMovieListItem", to="movies.movie"
            ),
        ),
        migrations.AddField(
            model_name="usermovielist",
            name="user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="movie_lists",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.CreateModel(
            name="MovieCrew",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "department",
                    models.CharField(
                        choices=[
                            ("directing", "Yönetmen"),
                            ("writing", "Senarist"),
                            ("production", "Yapımcı"),
                            ("camera", "Görüntü Yönetmeni"),
                            ("editing", "Kurgu"),
                            ("sound", "Ses"),
                            ("art", "Sanat"),
                            ("costume", "Kostüm"),
                            ("other", "Diğer"),
                        ],
                        max_length=50,
                        verbose_name="Departman",
                    ),
                ),
                ("job", models.CharField(max_length=255, verbose_name="Görev")),
                (
                    "movie",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="movies.movie"
                    ),
                ),
                (
                    "person",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="movies.person"
                    ),
                ),
            ],
            options={
                "verbose_name": "Film Ekibi",
                "verbose_name_plural": "Film Ekibi",
            },
        ),
        migrations.CreateModel(
            name="MovieCast",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "character",
                    models.CharField(max_length=255, verbose_name="Karakter"),
                ),
                ("order", models.IntegerField(verbose_name="Sıra")),
                (
                    "movie",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="movies.movie"
                    ),
                ),
                (
                    "person",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="movies.person"
                    ),
                ),
            ],
            options={
                "verbose_name": "Film Oyuncusu",
                "verbose_name_plural": "Film Oyuncuları",
                "ordering": ["order"],
            },
        ),
        migrations.AddField(
            model_name="movie",
            name="cast",
            field=models.ManyToManyField(
                related_name="movies_acted",
                through="movies.MovieCast",
                to="movies.person",
            ),
        ),
        migrations.AddField(
            model_name="movie",
            name="crew",
            field=models.ManyToManyField(
                related_name="movies_worked",
                through="movies.MovieCrew",
                to="movies.person",
            ),
        ),
        migrations.AddField(
            model_name="movie",
            name="genres",
            field=models.ManyToManyField(
                related_name="movies", to="movies.genre", verbose_name="Türler"
            ),
        ),
        migrations.CreateModel(
            name="UserMovieWatchlist",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("added_at", models.DateTimeField(auto_now_add=True)),
                ("notes", models.TextField(blank=True, verbose_name="Notlar")),
                (
                    "movie",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="movies.movie"
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="movie_watchlist",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "İzleme Listesi",
                "verbose_name_plural": "İzleme Listeleri",
                "unique_together": {("user", "movie")},
            },
        ),
        migrations.CreateModel(
            name="UserMovieRating",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "rating",
                    models.DecimalField(
                        decimal_places=1, max_digits=3, verbose_name="Puan"
                    ),
                ),
                ("review", models.TextField(blank=True, verbose_name="İnceleme")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "likes",
                    models.ManyToManyField(
                        related_name="liked_movie_ratings", to=settings.AUTH_USER_MODEL
                    ),
                ),
                (
                    "movie",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="user_ratings",
                        to="movies.movie",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="movie_ratings",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Film Değerlendirmesi",
                "verbose_name_plural": "Film Değerlendirmeleri",
                "unique_together": {("user", "movie")},
            },
        ),
    ]
