# Generated by Django 4.2.10 on 2025-03-14 19:41

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("movies", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Community",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255, verbose_name="Topluluk Adı")),
                ("slug", models.SlugField(unique=True, verbose_name="URL")),
                ("description", models.TextField(verbose_name="Açıklama")),
                (
                    "avatar",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="communities/avatars/",
                        verbose_name="Avatar",
                    ),
                ),
                (
                    "banner",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="communities/banners/",
                        verbose_name="Banner",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("rules", models.TextField(blank=True, verbose_name="Kurallar")),
                ("is_private", models.BooleanField(default=False, verbose_name="Özel")),
                (
                    "creator",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="created_communities",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Topluluk",
                "verbose_name_plural": "Topluluklar",
            },
        ),
        migrations.CreateModel(
            name="CommunityBadge",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="Rozet Adı")),
                ("description", models.TextField(verbose_name="Açıklama")),
                (
                    "icon",
                    models.ImageField(
                        upload_to="communities/badges/", verbose_name="İkon"
                    ),
                ),
                (
                    "is_special",
                    models.BooleanField(default=False, verbose_name="Özel Rozet"),
                ),
                (
                    "required_points",
                    models.IntegerField(default=0, verbose_name="Gerekli Puan"),
                ),
                (
                    "community",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="badges",
                        to="social.community",
                    ),
                ),
            ],
            options={
                "verbose_name": "Rozet",
                "verbose_name_plural": "Rozetler",
            },
        ),
        migrations.CreateModel(
            name="Notification",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("follow", "Takip"),
                            ("like", "Beğeni"),
                            ("comment", "Yorum"),
                            ("mention", "Bahsetme"),
                            ("badge", "Rozet"),
                            ("achievement", "Başarı"),
                            ("community", "Topluluk"),
                        ],
                        max_length=20,
                        verbose_name="Bildirim Tipi",
                    ),
                ),
                ("title", models.CharField(max_length=255, verbose_name="Başlık")),
                ("message", models.TextField(verbose_name="Mesaj")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("is_read", models.BooleanField(default=False, verbose_name="Okundu")),
                ("read_at", models.DateTimeField(blank=True, null=True)),
                ("related_object_id", models.IntegerField(blank=True, null=True)),
                ("related_object_type", models.CharField(blank=True, max_length=50)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="notifications",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Bildirim",
                "verbose_name_plural": "Bildirimler",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Message",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("content", models.TextField(verbose_name="Mesaj")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("is_read", models.BooleanField(default=False, verbose_name="Okundu")),
                ("read_at", models.DateTimeField(blank=True, null=True)),
                (
                    "receiver",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="received_messages",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "sender",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="sent_messages",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Mesaj",
                "verbose_name_plural": "Mesajlar",
                "ordering": ["created_at"],
            },
        ),
        migrations.CreateModel(
            name="CommunityPost",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=255, verbose_name="Başlık")),
                ("content", models.TextField(verbose_name="İçerik")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "is_pinned",
                    models.BooleanField(default=False, verbose_name="Sabitlenmiş"),
                ),
                (
                    "is_locked",
                    models.BooleanField(default=False, verbose_name="Kilitli"),
                ),
                (
                    "author",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="community_posts",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "community",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="posts",
                        to="social.community",
                    ),
                ),
                (
                    "likes",
                    models.ManyToManyField(
                        related_name="liked_community_posts",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "related_movie",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="movies.movie",
                    ),
                ),
            ],
            options={
                "verbose_name": "Gönderi",
                "verbose_name_plural": "Gönderiler",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="CommunityMember",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "role",
                    models.CharField(
                        choices=[
                            ("admin", "Yönetici"),
                            ("moderator", "Moderatör"),
                            ("member", "Üye"),
                        ],
                        default="member",
                        max_length=20,
                        verbose_name="Rol",
                    ),
                ),
                ("joined_at", models.DateTimeField(auto_now_add=True)),
                (
                    "is_banned",
                    models.BooleanField(default=False, verbose_name="Engellenmiş"),
                ),
                (
                    "ban_reason",
                    models.TextField(blank=True, verbose_name="Engelleme Nedeni"),
                ),
                (
                    "custom_title",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Özel Başlık"
                    ),
                ),
                (
                    "community",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="social.community",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Topluluk Üyesi",
                "verbose_name_plural": "Topluluk Üyeleri",
                "unique_together": {("community", "user")},
            },
        ),
        migrations.CreateModel(
            name="CommunityComment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("content", models.TextField(verbose_name="İçerik")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "author",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="community_comments",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "likes",
                    models.ManyToManyField(
                        related_name="liked_community_comments",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "parent",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="replies",
                        to="social.communitycomment",
                    ),
                ),
                (
                    "post",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="comments",
                        to="social.communitypost",
                    ),
                ),
            ],
            options={
                "verbose_name": "Yorum",
                "verbose_name_plural": "Yorumlar",
                "ordering": ["created_at"],
            },
        ),
        migrations.AddField(
            model_name="community",
            name="members",
            field=models.ManyToManyField(
                related_name="joined_communities",
                through="social.CommunityMember",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="community",
            name="related_movies",
            field=models.ManyToManyField(
                blank=True, related_name="communities", to="movies.movie"
            ),
        ),
        migrations.CreateModel(
            name="UserBadge",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("earned_at", models.DateTimeField(auto_now_add=True)),
                (
                    "badge",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="social.communitybadge",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="community_badges",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Kullanıcı Rozeti",
                "verbose_name_plural": "Kullanıcı Rozetleri",
                "unique_together": {("user", "badge")},
            },
        ),
    ]
